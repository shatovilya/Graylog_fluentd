version: "3.7"

x-log: &default
  restart: always
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "10"

x-env-general: &env-general
  TZ: ${TZ:-Europe/Moscow}

x-env-elasticsearch: &env-elasticsearch
  MAX_LOCKED_MEMORY:                  ${MAX_LOCKED_MEMORY:-unlimited}
  # ELASTICSEARCH_NODE_NAME:            ${ELASTICSEARCH_NODE_NAME:-{{.Task.Slot}}-elasticsearch-master}
  ELASTICSEARCH_CLUSTER_HOSTS:        ${ELASTICSEARCH_CLUSTER_HOSTS:-1-elasticsearch-master,2-elasticsearch-master,3-elasticsearch-master}
  ELASTICSEARCH_CLUSTER_NAME:         ${ELASTICSEARCH_CLUSTER_NAME:-elasticsearch-cluster-graylog}
  ELASTICSEARCH_HEAP_SIZE:            ${ELASTICSEARCH_HEAP_SIZE:-512M}
  ELASTICSEARCH_MINIMUM_MASTER_NODES: ${ELASTICSEARCH_MINIMUM_MASTER_NODES:-2}

x-env-graylog: &env-graylog
  # CHANGE ME (must be at least 16 characters)!
  GRAYLOG_PASSWORD_SECRET:                  ${GRAYLOG_PASSWORD_SECRET:-1e4ee34tbrr890kn7rr6t7ry!}
  GRAYLOG_IS_MASTER:                        ${GRAYLOG_IS_MASTER:-true}
  GRAYLOG_ROOT_PASSWORD_SHA2:               ${GRAYLOG_ROOT_PASSWORD_SHA2:-8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918}
  GRAYLOG_ELASTICSEARCH_VERSION:            ${GRAYLOG_ELASTICSEARCH_VERSION:-7}
  GRAYLOG_ELASTICSEARCH_HOSTS:              ${GRAYLOG_ELASTICSEARCH_HOSTS:-http://1-elasticsearch-master:9200,http://2-elasticsearch-master:9200,http://3-elasticsearch-master:9200}
  GRAYLOG_ELASTICSEARCH_SHARDS:             ${GRAYLOG_ELASTICSEARCH_SHARDS:-3}
  GRAYLOG_ELASTICSEARCH_REPLICAS:           ${GRAYLOG_ELASTICSEARCH_REPLICAS:-1}
  GRAYLOG_PROMETHEUS_EXPORTER_ENABLED:      ${GRAYLOG_PROMETHEUS_EXPORTER_ENABLED:-true}
  GRAYLOG_PROMETHEUS_EXPORTER_BIND_ADDRESS: ${GRAYLOG_PROMETHEUS_EXPORTER_BIND_ADDRESS:-0.0.0.0:9833}
  GRAYLOG_MONGODB_URI:                      ${GRAYLOG_MONGODB_URI:-}

x-env-db-backup: &env-db-backup
  DB_TYPE:          ${DB_TYPE:-mongo}
  DB_HOST:          ${DB_HOST:-mongo1}
  DB_NAME:          ${DB_NAME:-graylog}
  DB_DUMP_FREQ:     ${DB_DUMP_FREQ:-1440}
  DB_DUMP_BEGIN:    ${DB_DUMP_BEGIN:-1900}
  DB_CLEANUP_TIME:  ${DB_CLEANUP_TIME:-8640}
  DB_AUTH:          ${DB_AUTH:-graylog}
  DB_PASS:          ${DB_PASS:-log}
  DB_USER:          ${DB_USER:-log}

services:
  1-elasticsearch-master:
    image: bitnami/elasticsearch:7.10.1
    <<: *default
    hostname: "1-elasticsearch-master"
    environment:
      <<: *env-elasticsearch
      <<: *env-general
    security_opt:
      - no-new-privileges:true
    networks:
      - graylog

  2-elasticsearch-master:
    image: bitnami/elasticsearch:7.10.1
    <<: *default
    hostname: "2-elasticsearch-master"
    environment:
      <<: *env-elasticsearch
      <<: *env-general
    security_opt:
      - no-new-privileges:true
    networks:
      - graylog

  3-elasticsearch-master:
    image: bitnami/elasticsearch:7.10.1
    <<: *default
    hostname: "3-elasticsearch-master"
    environment:
      <<: *env-elasticsearch
      <<: *env-general
    security_opt:
      - no-new-privileges:true
    networks:
      - graylog

  mongo1:
    container_name: mongo1
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs01" ]
    image: mongo:4.4
    <<: *default
    environment:
      <<: *env-general
    volumes:
      - mongors_data1:/data/db
    networks:
      - graylog
    depends_on:
      - 1-elasticsearch-master
      - 2-elasticsearch-master
      - 3-elasticsearch-master
      - mongo-setup

  mongo2:
    container_name: mongo2
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs01" ]
    image: mongo:4.4
    <<: *default
    environment:
      <<: *env-general
      <<: *env-db-backup
    volumes:
      - mongors_data2:/data/db
    networks:
      - graylog
    depends_on:
      - 1-elasticsearch-master
      - 2-elasticsearch-master
      - 3-elasticsearch-master
      - mongo-setup

  mongo3:
    container_name: mongo3
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs01" ]
    image: mongo:4.4
    <<: *default
    environment:
      <<: *env-general
      <<: *env-db-backup
    volumes:
      - mongors_data3:/data/db
    networks:
      - graylog
    depends_on:
      - 1-elasticsearch-master
      - 2-elasticsearch-master
      - 3-elasticsearch-master
      - mongo-setup

  mongo-setup:
    container_name: mongo-setup
    build: ./docker/mongo-setup
    restart: 'no'
    environment:
      <<: *env-general
      <<: *env-db-backup
    volumes:
      - mongors_setup:/data
    networks:
      - graylog
    entrypoint: [ "bash", "/rs-init.sh"]

  graylog:
    image: graylog/graylog:4.3
    <<: *default
    volumes:
      - graylog_data:/usr/share/graylog/data
    environment:
      <<: *env-graylog
      <<: *env-general
    ports:
      # Graylog web interface and REST API
      - 80:9000
      # Syslog TCP
      - 1514
      # Syslog UDP
      - 1514/udp
      # GELF TCP
      - 12201
      # GELF UDP
      - 12201/udp
      - 5555/udp
      # Дополнтельные порты
      - 30000-30020
      - 30000-30020/udp
      # Prometeus exporter
      - 9833:9833
    security_opt:
      - no-new-privileges:true
    depends_on:
      - 1-elasticsearch-master
      - 2-elasticsearch-master
      - 3-elasticsearch-master
      - mongo-setup
      - mongo1
      - mongo2
      - mongo3
    networks:
      - graylog

  fluentd-collector:
    image: npcmr/fluentd-collector:v1.15
    <<: *default
    hostname: fluentd-collector
    volumes:
      - buffer:/var/log/fluent/
    ports:
      # forward ports
      - "24224:24224"
      - "24224:24224/udp"
      # http check ports      
      - "8888:8888"
      # prometheus check ports
      - "24231:24231"
    security_opt:
      - no-new-privileges:true
    networks:
      - graylog
    depends_on:
      - 1-elasticsearch-master
      - 2-elasticsearch-master
      - 3-elasticsearch-master
      - mongo-setup
      - mongo1
      - mongo2
      - mongo3
      - graylog

  db-backup-mongo:
    image: tiredofit/db-backup
    <<: *default
    security_opt:
      - no-new-privileges:true
    environment:
      <<: *env-general
      <<: *env-db-backup
    volumes:
      - backups:/backup
    networks:
      - graylog

networks:
  graylog:

volumes:
  elasticsearch:
  buffer:
  graylog_data:
  mongo_data:
  backups:
  mongodb_master_data:
  mongors_data1:
  mongors_data2:
  mongors_data3:
  mongors_setup: